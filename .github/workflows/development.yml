################################ Important ################################
# Environment specific options:
# - action triggers -> push & pull_request
# - sync s3 -> DEST_DIR
# - invalidate cloudfront -> DISTRIBUTION
# - build command -> yarn build:{env}
###########################################################################

# This is a basic workflow to help you get started with Actions

name: Deployment dev

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [dev,main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Cache node_modules folder
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install deps
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn

  lint:
    name: Lint
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Cache node_modules folder
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Lint
        run: yarn lint

  test:
    name: Test
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Cache node_modules folder
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # - name: Test
      #   run: yarn test

  # This workflow contains a single job called "build"
  build:
    name: Build repo
    needs: [lint, test]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Cache node_modules folder
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache current build folder
        uses: actions/cache@v3
        with:
          path: ./dist
          key: ${{ runner.os }}-${{ github.sha }}-build

      - name: Building
        run: yarn build

  deploy:
    name: Deploy to Amazon S3
    needs: [build]
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Cache current build folder
        uses: actions/cache@v3
        with:
          path: ./dist
          key: ${{ runner.os }}-${{ github.sha }}-build

      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete # --exclude '.git*/*'
        env:
          AWS_REGION: 'ap-east-1' # optional: defaults to us-east-1
          AWS_S3_BUCKET: yodo1-sabre-fe
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: './dist/' # optional: defaults to entire repository
          DEST_DIR: 'dev/home/' # optional: / root of bucket

  cleanCache:
    name: Invalidate CloudFront distribution path
    needs: [deploy]
    runs-on: ubuntu-latest

    steps:
      # Invalidate Cloudfront (this action)
      - name: invalidate
        uses: chetan/invalidate-cloudfront-action@master
        env:
          AWS_REGION: 'ap-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DISTRIBUTION: 'E2X15R7BKHI0XG'
          PATHS: '/index.html'
